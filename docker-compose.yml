services:
  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: eve-postgres
    environment:
      POSTGRES_USER: eve_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: eve_markets
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eve_user -d eve_markets"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: eve-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Data Collector Daemon
  collector:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eve-collector
    command: python scripts/scheduler_daemon.py
    environment:
      DATABASE_URL: postgresql+asyncpg://eve_user:${DB_PASSWORD:-changeme}@postgres:5432/eve_markets
      REDIS_URL: redis://redis:6379/0
      LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # FastAPI Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eve-api
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://eve_user:${DB_PASSWORD:-changeme}@postgres:5432/eve_markets
      REDIS_URL: redis://redis:6379/0
      MODEL_PATH: /app/data/models/best_model.pth
      LOG_LEVEL: INFO
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # MLflow Tracking Server
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.17.0
    container_name: eve-mlflow
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri sqlite:///mlflow/mlflow.db
      --default-artifact-root /mlflow/artifacts
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow
    restart: unless-stopped

  # Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eve-dashboard
    command: python src/dashboard/app.py
    ports:
      - "8050:8050"
    environment:
      DATABASE_URL: postgresql+asyncpg://eve_user:${DB_PASSWORD:-changeme}@postgres:5432/eve_markets
      REDIS_URL: redis://redis:6379/0
      LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mlflow_data:
